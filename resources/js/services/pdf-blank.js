import fileLoader from '@/services/file-loader';
import Sketchpad from '@/vendors/responsive-sketchpad';
import QRCode from 'qrcode';
import html2canvas from 'html2canvas';

const FONT_DATA = '';
const DEFAULT_SCALE = 1;
const TEXT_COLOR = '#333333';
const LINE_HEIGHT = 11;
const ORIENTATION_LANDSCAPE = 'l';
const ORIENTATION_PORTRAIT = 'p';
const DEFAULT_FORMAT = 'a4';
const CHECK = 'iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAYAAAAfSC3RAAAA5UlEQVQoz53Ruy6EURTF8d8nk6DRiVYiIRGFOA+g8BKi5gW8gkvlCTQovMOUoraimWJQKFwiKoViIhGaj4wxEzN2c7Iv/+y9zuIfUUppVCMCY9jCYWMEaBIXWEvyMTYkNIV7HCV5gmoIaAItvCVZ/KoPc2oTs1jqLjZKKRXWcZ7koWfbJlbRTNLu7lX1QIWbWsdGksdSSgN3mMFckttfYJeWNqaxjw4OcJlkpff+719N0sEyXrGLvbp10k/4DzuSvGC7TsfxjuN+YDXAgivM4zrJwp8bu2KnfluDPBrk4ynO8DwI/ARdo0Nc2KskUgAAAABJRU5ErkJggg==';
const WORKER_URL = '/vendor/pdfjs/pdf-worker.js';
const pdfjsLib = window['pdfjs-dist/build/pdf'];

if (pdfjsLib !== undefined) {
    pdfjsLib.GlobalWorkerOptions.workerSrc = WORKER_URL;
}

const pdfFactory = (render, options = {}, installFont = true) => {
    let pdf = new jsPDF({unit: 'pt', ...options});
    if (installFont) {
        pdf.addFileToVFS('font.ttf', FONT_DATA);
        pdf.addFont('font.ttf', 'PTSans', 'normal');
        pdf.setFont('PTSans');
    }
    pdf.setFontSize(10);
    pdf.setTextColor(TEXT_COLOR);
    return render(pdf).then(() => {
        return pdf.output('blob');
    });
}

const pts = (x) => x * 0.75;

const multiPagesToPdf = (documents, options = {}) => {
    return new Promise((resolve, reject) => {
        let promises = [];
        let canvases = [];
        let opts = {
            width: 700,
            scale: 1.5,
            paddingH: 30,
            paddingV: 30,
            format: 'JPEG',
            ...options,
        }
        documents.forEach(page => {
            page.document.body.className += ' pdf-canvas';
            promises.push(
                html2canvas(page.document.body).then((canvas) => {
                    canvases.push(canvas);
                })
            );
        });

        Promise.all(promises).then(() => {
            return pdfFactory((pdf) => {
                for (let i = 0; i < canvases.length; i++) {
                    if (i > 0) {
                        pdf.addPage(i+1);
                        pdf.setPage(i+1);
                    }
                    pdf.addImage(canvases[i], opts.format, pts(opts.paddingH), pts(opts.paddingV));
                }
                return Promise.resolve();
            }, {'format': 'a4'}, false).then(resolve);
        });
    });
}

const pageToPdf = (document, options = {}) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            let opts = {
                width: 700,
                scale: 1.5,
                paddingH: 30,
                paddingV: 30,
                format: 'JPEG',
                ...options,
            }
            document.body.className += ' pdf-canvas';
            html2canvas(document.body, {
                width: opts.width,
                windowWidth: opts.width,
                scale: opts.scale,
                allowTaint: true,
            }).then((canvas) => {
                let w = canvas.width / opts.scale;
                let h = canvas.height / opts.scale;
                return pdfFactory((pdf) => {
                    pdf.addImage(canvas, opts.format, pts(opts.paddingH), pts(opts.paddingV), pts(w), pts(h));
                    return Promise.resolve();
                }, {
                    'format': [
                        pts(w + 2 * opts.paddingH),
                        pts(h + 2 * opts.paddingV),
                    ]
                }, false).then(resolve);
            }).catch(reject);
        }, 500);
    });
}

class PdfBlank {
    /**
     * Constructor
     *
     * @param {string} url
     * @param container
     * @param blankDefaults
     * @param images
     */
    constructor(url, container, blankDefaults = {}, images = null) {
        if (pdfjsLib === undefined) {
            throw 'PDFjs library not found!';
        }

        this._document = null;
        this._container = container;
        this._ready = false;
        this._blankDefaults = blankDefaults;
        this._pages = [];
        this._images = images;
        this._sketchpads = [];
        this._pageSizes = [];
        fileLoader.get(url).then((blobUrl) => {
            pdfjsLib.getDocument(blobUrl).promise.then((doc) => {
                this._document = doc;
                this.renderDocument().then(() => {
                    this._ready = true;
                    fileLoader.revoke(url);
                    this.setFormData(this._blankDefaults);
                });
            });
        });
    }

    /**
     * Render the document
     */
    renderDocument() {
        let promise = Promise.resolve();
        let doc = this._document;
        let container = this._container;
        let pageViews = this._pages;
        let pageSizes = this._pageSizes;

        for (let i = 1; i <= doc.numPages; i++) {
            promise = promise.then(function (pageNum) {
                return doc.getPage(pageNum).then((pdfPage) => {
                    let pdfPageView = new pdfjsViewer.PDFPageView({
                        container: container,
                        id: pageNum,
                        scale: DEFAULT_SCALE,
                        defaultViewport: pdfPage.getViewport({
                            scale: DEFAULT_SCALE,
                        }),
                        annotationLayerFactory: new pdfjsViewer.DefaultAnnotationLayerFactory(),
                        renderInteractiveForms: true,
                    });
                    pageViews.push(pdfPageView);
                    pdfPageView.setPdfPage(pdfPage);
                    pageSizes[pageNum] = [pdfPageView.width * 0.75, pdfPageView.height * 0.75];
                    return pdfPageView.draw();
                });
            }.bind(null, i));
        }

        promise.then(() => {
            this.getAnnotations((page, index, annotations) => {
                annotations.forEach((annotation) => {
                    if (annotation.fieldType === 'Sig') {
                        let rect = this.normalizeRect([
                            annotation.rect[0],
                            page.pdfPage.view[3] - annotation.rect[1] + page.pdfPage.view[1],
                            annotation.rect[2],
                            page.pdfPage.view[3] - annotation.rect[3] + page.pdfPage.view[1],
                        ]);

                        let annotationLayer = document.querySelector('.annotationLayer');

                        let width = (annotation.rect[2] - annotation.rect[0]) * 1.333333;
                        let height = (annotation.rect[3] - annotation.rect[1]) * 1.33333;
                        let sketchSection = this.createSection(annotation, rect, width, height);

                        let sketchpad = new Sketchpad(sketchSection, {
                            width: width,
                            height: height,
                            line: {
                                color: '#000000',
                                size: 2
                            }
                        })

                        let toolsDiv = this.createToolsDiv(sketchpad);
                        sketchSection.prepend(toolsDiv);
                        annotationLayer.appendChild(sketchSection);

                        this._sketchpads.push(
                            {
                                annotation: annotation,
                                sketchpad: sketchpad
                            }
                        );
                    }
                });
            });
        })

        return promise;
    }

    createSection(annotation, rect, width, height) {
        let sketchSection = document.createElement("section");
        sketchSection.setAttribute("data-annotation-id", annotation.id);
        sketchSection.classList.add('sketchAnnotation');

        sketchSection.style.left = `${rect[0] * 1.3333333}px`;
        sketchSection.style.top = `${rect[1] * 1.33333}px`;
        sketchSection.style.width = `${width}px`;
        sketchSection.style.height = `${height}px`;

        return sketchSection;
    }

    createToolsDiv(sketchpad) {

        let toolsDiv = document.createElement("div");

        toolsDiv.classList.add('sketchpad-tools');

        let undoButton = document.createElement('span');
        undoButton.classList.add('icon-small', 'icon-blue', 'cursor-pointer', 'svg-icon');
        undoButton.title = __('Назад');

        let colorPicker = document.createElement('input');
        colorPicker.style.marginTop = '10px';
        colorPicker.style.width = '20px';
        colorPicker.type = 'color';
        colorPicker.title = __('Цвет');
        colorPicker.style.cursor = 'pointer';

        let redoButton = document.createElement('span');
        redoButton.title = __('Вперёд');
        redoButton.classList.add('icon-small', 'icon-blue', 'cursor-pointer', 'svg-icon');
        redoButton.style.marginTop = '10px';

        let clearButton = document.createElement('span');
        clearButton.title = __('Очистить');
        clearButton.classList.add('icon-small', 'icon-blue', 'cursor-pointer', 'svg-icon');
        clearButton.style.marginTop = '10px';


        let undoSvgElem = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),
            undoUseElem = document.createElementNS('http://www.w3.org/2000/svg', 'use');

        undoUseElem.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '/svg/spritesheet/sprite.svg#arrow-circle');

        undoSvgElem.style.transform = 'scaleX(-1)';
        undoSvgElem.appendChild(undoUseElem);


        let clearSvgElem = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),
            clearUseElem = document.createElementNS('http://www.w3.org/2000/svg', 'use');

        clearUseElem.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '/svg/spritesheet/sprite.svg#delete');

        clearSvgElem.appendChild(clearUseElem);

        let redoSvgElem = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),
            redoUseElem = document.createElementNS('http://www.w3.org/2000/svg', 'use');

        redoUseElem.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', '/svg/spritesheet/sprite.svg#arrow-circle');

        redoSvgElem.appendChild(redoUseElem);

        /*
        * Buttons inner
        * */
        redoButton.appendChild(redoSvgElem);
        undoButton.appendChild(undoSvgElem);
        clearButton.appendChild(clearSvgElem);

        undoButton.addEventListener("click", function () {
            sketchpad.undo();
        });

        redoButton.addEventListener("click", function () {
            sketchpad.redo();
        });

        clearButton.addEventListener("click", function () {
            sketchpad.clear();
        });

        colorPicker.addEventListener("change", function (event) {
            sketchpad.setLineColor(event.target.value);
        });


        toolsDiv.appendChild(undoButton);
        toolsDiv.appendChild(redoButton);
        toolsDiv.appendChild(clearButton);
        toolsDiv.appendChild(colorPicker);

        return toolsDiv;
    }

    /**
     * Get document annotations
     *
     * @param {function} callback
     *
     * @returns {Promise}
     */
    getAnnotations(callback) {
        let promises = [];

        this._pages.forEach((page, index) => {
            promises.push(
                page.pdfPage.getAnnotations().then((annotations) => {
                    callback(page, index, annotations);
                })
            );
        });

        return Promise.all(promises);
    }

    /**
     * Save form data
     */
    output(options = {}) {
        options.format = this._pageSizes[1] || DEFAULT_FORMAT;
        options.orientation = (this._pageSizes[1] && this._pageSizes[1][0] > this._pageSizes[1][1]) 
            ? ORIENTATION_LANDSCAPE 
            : ORIENTATION_PORTRAIT;

        return pdfFactory((pdf) => {
            let defaultFontSize = pdf.getFontSize();
            return this.getAnnotations((page, index, annotations) => {
                if (index !== 0) {
                    pdf.addPage(this._pageSizes[index] || DEFAULT_FORMAT);
                }
                
                pdf.addImage(page.canvas, 'PNG', 0, 0);
                //TODO: Needs VERY major refactoring
                annotations.forEach((annotation) => {
                    let bottom = page.pdfPage.view[3];

                    if (annotation.fieldType === 'Sig') {
                        let sketchpad = this._sketchpads.find((sketchpad) => annotation.id === sketchpad.annotation.id);
                        let img = sketchpad.sketchpad.getImage();

                        pdf.addImage(img, 'PNG', annotation.rect[0], bottom - annotation.rect[3]);
                    } else if (annotation.fieldName === 'qr_code' && this._blankDefaults.qr_code_url !== null) {
                        let canvas = document.createElement('canvas');
                        canvas.width = (annotation.rect[2] - annotation.rect[0]) * 1.333333;
                        canvas.height = (annotation.rect[3] - annotation.rect[1]) * 1.333333;

                        QRCode.toCanvas(canvas, this._blankDefaults.qr_code_url, {
                            width: canvas.width,
                            color: {
                                dark: '#005295',
                                light: '#0000'
                            }
                        }, function (error) {
                            if (error) console.error(error)

                            let img = canvas.toDataURL("image/png", 1.0);
                            pdf.addImage(img, 'JPEG', annotation.rect[0], bottom - annotation.rect[3]);
                        })
                    } else {
                        this.addAnnotation(pdf, page, annotation, defaultFontSize);
                    }

                    //Images
                    if (Array.isArray(this._images)) {
                        let image = this._images.find((image) => image.name === annotation.fieldName);

                        if (image && image.img) {
                            pdf.addImage(image.img, 'PNG', annotation.rect[0], bottom - annotation.rect[3]);
                        }
                    }
                });
            });
        }, options);
    }

    /**
     * Get form data
     *
     * @returns {object}
     */
    getFormData() {
        let data = {};

        return this.getAnnotations((page, index, annotations) => {
            annotations.forEach((annotation) => {
                let value = this.getFieldValue(page, annotation.id);
                if (value === true) {
                    data[annotation.fieldName] = true;
                } else if (value !== '' && value !== false) {
                    data[annotation.fieldName] = value;
                }
            });
        }).then(() => {
            return data;
        });
    }

    /**
     * Set form data
     *
     * @returns {object}
     */
    setFormData(data) {
        this.getAnnotations((page, index, annotations) => {
            annotations.forEach((annotation) => {
                if (annotation.fieldName in data) {
                    this.setFieldValue(page, annotation.id, data[annotation.fieldName]);
                }
            });
        })
    }


    /**
     * Print form value in resulting pdf
     *
     * @param {object} pdf
     * @param {object} page
     * @param {object} annotation
     * @param {number} defaultFontSize
     */
    addAnnotation(pdf, page, annotation, defaultFontSize) {
        let bottom = page.pdfPage.view[3];
        let value = this.getFieldValue(page, annotation.id);
        if (value === true) {
            pdf.addImage(CHECK, 'PNG', annotation.rect[0], bottom - annotation.rect[3]);
        } else if (value !== '' && value !== false && value !== undefined) {
            if (annotation.hasAppearance === true) {
                let appearance = annotation.defaultAppearance ? annotation.defaultAppearance.split(' ') : [];
                let font = appearance[1] ? Number(appearance[1]) : null;
                if (font) {
                    pdf.setFontSize(font);
                }
            } else {
                pdf.setFontSize(defaultFontSize);
            }
            pdf.text(pdf.splitTextToSize(value, annotation.rect[2] - annotation.rect[0]), annotation.rect[0], bottom - annotation.rect[3] + LINE_HEIGHT);
        }
    }

    /**
     * Get annotation field
     *
     * @param {object} page
     * @param {string} id
     *
     * @returns {object}
     */
    getField(page, id) {
        return page.annotationLayer.div.querySelector('section[data-annotation-id="' + id + '"]>*');
    }

    /**
     * Get annotation field value
     *
     * @param {object} page
     * @param {string} id
     *
     * @returns {mixed}
     */
    getFieldValue(page, id) {
        let field = this.getField(page, id);

        if (field !== null) {
            if (field.type == 'checkbox') {
                return field.checked;
            } else if (field.value !== '') {
                return field.value;
            }
        }

        return '';
    }

    /**
     * Set annotation field value
     *
     * @param {object} page
     * @param {string} id
     *
     * @param value
     * @returns {void}
     */
    setFieldValue(page, id, value) {
        let field = this.getField(page, id);

        if (field !== null) {
            if (field.type == 'checkbox') {
                field.checked = Boolean(value);
            } else {
                field.value = value;
            }
        }
    }

    /**
     * Check if the document is ready
     *
     * @returns {bool}
     */
    get ready() {
        return this._ready;
    }


    // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)
    // For coordinate systems whose origin lies in the bottom-left, this
    // means normalization to (BL,TR) ordering. For systems with origin in the
    // top-left, this means (TL,BR) ordering.
    normalizeRect(rect) {
        const r = rect.slice(0); // clone rect
        if (rect[0] > rect[2]) {
            r[0] = rect[2];
            r[2] = rect[0];
        }
        if (rect[1] > rect[3]) {
            r[1] = rect[3];
            r[3] = rect[1];
        }
        return r;
    }

}

export default PdfBlank;

export {
    pdfFactory,
    pageToPdf,
    multiPagesToPdf,
};
